<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jirath.jirathblog2.dao.BlogDao">
    <insert id="addPassage" parameterType="Blog" useGeneratedKeys="true" keyProperty="blogId" keyColumn="blog_id">
        INSERT INTO blog (blog_content, blog_title, blog_author, blog_column_id,blog_comment_quantity, blog_create_time, blog_last_fix_time)
                VALUES (#{blogContent},#{blogTitle},#{blogAuthor},#{blogColumnId},0,now(),now())
    </insert>
    <update id="fixCommentNum" parameterType="int">
        UPDATE blog SET blog_comment_quantity=blog_comment_quantity+1 WHERE blog_id=#{value}
    </update>
    <update id="fixVisitNum" parameterType="int">
        UPDATE blog SET visit_time=visit_time+1 WHERE blog_id=#{value}
    </update>
    <update id="fixBlog" parameterType="Blog">
        UPDATE blog SET blog_content=#{blogContent} , blog_title=#{blogTitle},
         blog_author=#{blogAuthor}, blog_last_fix_time=now()
        WHERE blog_id=#{blogId}
    </update>
    <update id="fixBlogATC" parameterType="Blog">
        UPDATE blog SET blog_title=#{blogTitle},
         blog_author=#{blogAuthor},blog_column_id=#{blogColumnId},
         blog_last_fix_time=now()
        WHERE blog_id=#{blogId}
    </update>
    <update id="fixBlogColumn" parameterType="com.jirath.jirathblog2.query.FixColumn">
        UPDATE blog SET blog_column_id=#{newColumnId} , blog_last_fix_time=now()
        WHERE blog_column_id=#{originColumnId}
    </update>

    <delete id="deleteBlogById" parameterType="integer">
        DELETE FROM blog WHERE blog_id=#{value}
    </delete>
    <delete id="deleteByColumn" parameterType="int">
        DELETE FROM blog WHERE blog_id IN (SELECT blog_id FROM blog_column WHERE column_id=#{value})
    </delete>
    <delete id="deleteBlogByIdList" parameterType="list" >
        DELETE DELETE FROM blog WHERE blog_id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            {id}
        </foreach>
    </delete>
    <select id="getMsgByColumnId" resultType="com.jirath.jirathblog2.vo.BlogVo" parameterType="integer">
        SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        WHERE  blog.blog_column_id=#{value}
    </select>
    <select id="getSpecificPage" resultType="com.jirath.jirathblog2.vo.BlogVo" parameterType="PageScope">
        SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        ORDER BY blog_id desc LIMIT #{skipNum},#{requireNum}
    </select>
    <select id="getBlogNum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM blog
    </select>
    <select id="getLatest" resultType="com.jirath.jirathblog2.vo.BlogVo">
        SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        ORDER BY blog_id DESC LIMIT 1
    </select>
    <select id="getRandPsg" resultType="com.jirath.jirathblog2.vo.BlogVo">
       SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        ORDER BY RAND() LIMIT 1;
    </select>
    <select id="getCommentNum" resultType="java.lang.Integer" parameterType="int">
        SELECT blog_comment_quantity FROM blog WHERE blog_id=#{value}
    </select>
    <select id="getMsgByBlogIdList" parameterType="integer" resultType="com.jirath.jirathblog2.vo.BlogVo">
        SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getMsgById" resultType="com.jirath.jirathblog2.vo.BlogVo">
        SELECT blog.*,`column`.column_presentation AS column_name FROM blog
        JOIN `column`
        ON blog.blog_column_id = `column`.column_id
        WHERE blog_id=#{value}
    </select>

</mapper>